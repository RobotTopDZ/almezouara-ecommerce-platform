#!/usr/bin/env node

const axios = require('axios');

const BASE_URL = 'https://almezouara-ecommerce-platform-production.up.railway.app';

async function diagnoseFrontendIssues() {
  console.log('üîç DIAGNOSTIC COMPLET - Probl√®mes Frontend\n');
  
  // Test 1: Database connection
  console.log('1Ô∏è‚É£ Test de connexion base de donn√©es...');
  try {
    const response = await axios.get(`${BASE_URL}/api/debug-database`);
    if (response.data.database && response.data.database.connected) {
      console.log('‚úÖ Base de donn√©es connect√©e');
    } else {
      console.log('‚ùå Base de donn√©es non connect√©e');
      return;
    }
  } catch (error) {
    console.log('‚ùå Erreur test DB:', error.message);
    return;
  }
  
  // Test 2: Shipping fees - All wilayas
  console.log('\n2Ô∏è‚É£ Test frais de livraison - Toutes les wilayas...');
  try {
    const response = await axios.get(`${BASE_URL}/api/shipping-fees`);
    if (response.data.success && response.data.wilayas) {
      console.log(`‚úÖ ${response.data.wilayas.length} wilayas disponibles`);
      console.log(`   Exemples: ${response.data.wilayas.slice(0, 5).join(', ')}`);
    } else {
      console.log('‚ùå Pas de wilayas retourn√©es');
    }
  } catch (error) {
    console.log('‚ùå Erreur wilayas:', error.message);
  }
  
  // Test 3: Shipping fees - Cities for Alger
  console.log('\n3Ô∏è‚É£ Test frais de livraison - Villes d\'Alger...');
  try {
    const response = await axios.get(`${BASE_URL}/api/shipping-fees?wilaya=Alger`);
    if (response.data.success && response.data.cities) {
      console.log(`‚úÖ ${response.data.cities.length} villes √† Alger`);
      console.log(`   Exemples: ${response.data.cities.slice(0, 3).map(c => `${c.city} (${c.domicilePrice} DZD)`).join(', ')}`);
    } else {
      console.log('‚ùå Pas de villes retourn√©es pour Alger');
    }
  } catch (error) {
    console.log('‚ùå Erreur villes Alger:', error.message);
  }
  
  // Test 4: Specific shipping fee
  console.log('\n4Ô∏è‚É£ Test frais de livraison - Alger Centre sp√©cifique...');
  try {
    const response = await axios.get(`${BASE_URL}/api/shipping-fees?wilaya=Alger&city=Alger%20Centre`);
    if (response.data.success && response.data.shippingFee) {
      const fee = response.data.shippingFee;
      console.log(`‚úÖ Frais pour Alger Centre:`);
      console.log(`   Domicile: ${fee.domicilePrice} DZD`);
      console.log(`   Stopdesk: ${fee.stopdeskPrice} DZD`);
    } else {
      console.log('‚ùå Pas de frais sp√©cifiques pour Alger Centre');
    }
  } catch (error) {
    console.log('‚ùå Erreur frais Alger Centre:', error.message);
  }
  
  // Test 5: Order creation
  console.log('\n5Ô∏è‚É£ Test cr√©ation de commande...');
  try {
    const orderData = {
      phoneNumber: '0555999888',
      items: [{ id: 1, name: 'Test Product', price: 2500, quantity: 1 }],
      total: 3000,
      deliveryMethod: 'domicile',
      address: 'Test Address',
      fullName: 'Test User',
      wilaya: 'Alger',
      city: 'Alger Centre',
      shippingCost: 400,
      productPrice: 2500
    };
    
    const response = await axios.post(`${BASE_URL}/api/orders`, orderData);
    if (response.data.success) {
      console.log(`‚úÖ Commande cr√©√©e: ${response.data.orderId}`);
      if (response.data.message.includes('mock')) {
        console.log('‚ö†Ô∏è  ATTENTION: Commande en mode MOCK (pas sauvegard√©e en DB)');
      } else {
        console.log('‚úÖ Commande sauvegard√©e en base de donn√©es');
      }
    } else {
      console.log('‚ùå √âchec cr√©ation commande:', response.data);
    }
  } catch (error) {
    console.log('‚ùå Erreur cr√©ation commande:', error.response?.data || error.message);
  }
  
  console.log('\nüéØ DIAGNOSTIC TERMIN√â');
}

diagnoseFrontendIssues().catch(console.error);
