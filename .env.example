# Railway Deployment Environment Variables
# Copy this file to .env and fill in your actual values

# ===== DATABASE CONFIGURATION =====
# Option 1: Use DATABASE_URL (recommended for Railway)
DATABASE_URL=mysql://username:password@host:port/database_name

# Option 2: Use discrete variables (alternative)
# DATABASE_HOST=your-mysql-host
# DATABASE_USERNAME=your-mysql-username
# DATABASE_PASSWORD=your-mysql-password
# DATABASE_NAME=almezouara_db
# DATABASE_PORT=3306

# SSL Configuration (Railway usually doesn't require SSL for internal connections)
DATABASE_SSL=false
# DATABASE_SSL_REJECT_UNAUTHORIZED=true

# ===== SERVER CONFIGURATION =====
# Port (Railway will set this automatically)
PORT=3000

# Environment
NODE_ENV=production

# ===== CORS CONFIGURATION =====
# Your Railway app URL (replace with your actual subdomain)
CORS_ORIGIN=https://your-app-name.up.railway.app

# ===== OPTIONAL FEATURES =====
# Set to "true" to migrate shipping data on startup (only needed once)
MIGRATE_SHIPPING_DATA=false

# ===== YALIDINE API (Optional - for shipping integration) =====
# YALIDINE_API_ID=your_yalidine_api_id
# YALIDINE_API_TOKEN=your_yalidine_api_token

# ===== RAILWAY DEPLOYMENT NOTES =====
# 1. Create a new Railway project from GitHub
# 2. Add a MySQL database service to your project
# 3. Copy the MySQL connection URL to DATABASE_URL
# 4. Set CORS_ORIGIN to your Railway app URL
# 5. Deploy and check logs for any issues
